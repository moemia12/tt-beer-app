{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","overflow","height","downButton","bottom","infoBar","background","backgroundImage","boxShadow","backgroundColor","paginator","marginLeft","spacing","position","filterButton","beerFilter","top","beerFilterText","left","App","style","useState","beers","setBeers","filteredBeers","setFilteredBeers","useEffect","a","fetch","res","json","data","length","slice","getBeers","filterByVolume","min","max","console","log","filtered","filter","beer","abv","className","src","Button","onClick","window","scrollTo","behavior","size","color","variant","fullWidth","startIcon","zIndex","e","ImageList","rowHeight","cols","ImageListItem","map","index","image_url","alt","name","ImageListItemBar","title","subtitle","Pagination","count","hideNextButton","hidePrevButton","onChange","event","offset","parseInt","target","innerText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUAYMA,EAAYC,aAAW,SAACC,GAAD,cAAY,CACvCC,KAAM,CACJC,SAAU,SACVC,OAAQ,MAEVC,WAAY,CACVC,OAAQ,KAEVC,SAAO,GACLD,OAAQ,GACRE,WAAY,YACZC,gBAAiB,mDACjBC,UAAW,mCACXC,gBAAiB,WALZ,gCAMY,oDANZ,2BAOO,QAPP,GAUPC,UAAW,CACT,QAAS,CACPC,WAAYZ,EAAMa,QAAQ,KAC1BC,SAAU,WACVT,OAAQ,KAIZU,cAAY,GACVR,WAAY,YACZC,gBAAiB,mDACjBC,UAAW,mCACXC,gBAAiB,WAJP,gCAKO,oDALP,6BAMI,KANJ,wBAOD,IAPC,uBAQFV,EAAMa,QAAQ,IARZ,uBASF,WATE,GAWZG,WAAY,CACVF,SAAU,WACRG,IAAK,KAETC,eAAgB,CACdJ,SAAU,WACVK,KAAM,IACNd,OAAQ,QAwGGe,MAnGf,WACE,IAAMC,EAAQvB,IADD,EAKawB,mBAAS,IALtB,mBAKNC,EALM,KAKCC,EALD,OAM6BF,mBAAS,IANtC,mBAMNG,EANM,KAMSC,EANT,KASbC,qBAAU,WAAM,4CAGd,8BAAAC,EAAA,sEACoBC,MAAM,oCAD1B,cACQC,EADR,gBAEqBA,EAAIC,OAFzB,OAEQC,EAFR,OAIeA,EAAKC,OAClBT,EAASQ,GACTN,EAAiBM,EAAKE,MAAM,EAAG,KANjC,4CAHc,0DACdC,KAUC,IAGH,IAOMC,EAAiB,SAACC,EAAKC,GAC3BC,QAAQC,IAAI,SACZ,IAAMC,EAAWlB,EAAMmB,QAAO,SAACC,GAAD,OAAUA,EAAKC,IAAMP,GAAOM,EAAKC,IAAMN,KACrEZ,EAAiBe,IAInB,OACE,sBAAKI,UAAU,MAAf,UAEE,sBAAKA,UAAU,eAAf,UACE,qBAAKC,IAAI,6BACT,qBAAKA,IAAI,gCAIX,cAACC,EAAA,EAAD,CACEF,UAAWxB,EAAMjB,WACjB4C,QAAS,kBAAMC,OAAOC,SAAS,CAC7BjC,IAAK,KACLkC,SAAU,YAEZC,KAAK,QACLC,MAAM,UACNC,QAAQ,OACRC,UAAU,OACVC,UAAW,cAAC,IAAD,MAIb,sBAAKX,UAAWxB,EAAML,WAAYK,MAAO,CAACoC,OAAQ,OAAlD,UACE,oBAAIZ,UAAWxB,EAAMH,eAArB,2CAEE,sBAAM2B,UAAWxB,EAAMN,aAAcM,MAAO,CAACgC,MAAO,SAAUL,QAAS,SAACU,GAAD,OAAOtB,EAAe,EAAG,IAAhG,2BACA,sBAAMS,UAAWxB,EAAMN,aAAcM,MAAO,CAACgC,MAAO,SAAUL,QAAS,SAACU,GAAD,OAAOtB,EAAe,EAAG,KAAhG,0BACA,sBAAMS,UAAWxB,EAAMN,aAAcM,MAAO,CAACgC,MAAO,SAAUL,QAAS,SAACU,GAAD,OAAOtB,EAAe,GAAI,MAAjG,8BAKJ,qBAAKS,UAAWxB,EAAMpB,KAAtB,SACE,eAAC0D,EAAA,EAAD,CAAWC,UAAW,IAAKC,KAAM,EAAjC,UAEE,cAACC,EAAA,EAAD,CAA+BD,KAAM,EAAGxC,MAAO,CAAElB,OAAQ,SAAtC,aAElBsB,GAAiBA,EAAcsC,KAAI,SAACpB,EAAMqB,GAAP,OAClC,eAACF,EAAA,EAAD,WACE,qBAAKhB,IAAKH,EAAKsB,UAAWC,IAAKvB,EAAKwB,OACpC,cAACC,EAAA,EAAD,CAAkBvB,UAAWxB,EAAMf,QAAS+D,MAAO1B,EAAKwB,KAAMG,SAAU,yCAAY3B,EAAKC,WAFvEoB,WAUxB,cAACO,EAAA,EAAD,CACE1B,UAAWxB,EAAMV,UACjB6D,MAAO,EACPnB,MAAM,YACNoB,gBAAgB,EAChBC,gBAAgB,EAChBC,SArEiB,SAACC,GACxB,IACMC,EAAuB,IADfC,SAASF,EAAMG,OAAOC,WACZ,GACxBtD,EAAiBH,EAAMW,MAAM2C,EAAQA,EAAS,YC3EnCI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.05697ba1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageList from '@material-ui/core/ImageList';\nimport ImageListItem from '@material-ui/core/ImageListItem';\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\nimport Pagination from '@material-ui/lab/Pagination';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\n\n\nimport './App.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    overflow: 'hidden',\n    height: 1050,\n  },\n  downButton: {\n    bottom: 380,\n  },\n  infoBar: {\n    bottom: 50,\n    background: '\t#e7eff9',\n    backgroundImage: 'linear-gradient(315deg, #e7eff9 0%, #cfd6e6 74%)',\n    boxShadow: '0px 7px 20px -10px rgba(0,0,0,1)',\n    backgroundColor: '#000000',\n    backgroundImage: 'linear-gradient(315deg, #000000 0%, #414141 74%)',\n    fontWeight: 'bold',\n\n  },\n  paginator: {\n    '& > *': {\n      marginLeft: theme.spacing(112),\n      position: 'relative',\n      bottom: 20,\n      \n    },\n  },\n  filterButton: {\n    background: '\t#e7eff9',\n    backgroundImage: 'linear-gradient(315deg, #e7eff9 0%, #cfd6e6 74%)',\n    boxShadow: '0px 7px 20px -10px rgba(0,0,0,1)',\n    backgroundColor: '#000000',\n    backgroundImage: 'linear-gradient(315deg, #000000 0%, #414141 74%)',\n    borderRadius: 100,\n    padding: 14,\n    margin: theme.spacing(1),\n    cursor: 'pointer',\n  },\n  beerFilter: {\n    position: 'relative',\n      top: 230,\n  },\n  beerFilterText: {\n    position: 'absolute',\n    left: 730,\n    bottom: 20,\n  }\n\n}));\n\nfunction App() {\n  const style = useStyles();\n\n  let totalBeers = 0;\n  // Hook to initialise state\n  const [beers, setBeers] = useState([]);\n  const [filteredBeers, setFilteredBeers] = useState([]);\n\n  // Hook to retrieve information from API\n  useEffect(() => {\n    getBeers();\n\n    async function getBeers() {\n      const res = await fetch(\"https://api.punkapi.com/v2/beers\");\n      const data = await res.json();\n\n      totalBeers = data.length\n      setBeers(data);\n      setFilteredBeers(data.slice(0, 10));\n    }\n  }, []);\n\n  // Pagination function\n  const handlePageChange = (event) => {\n    const index = parseInt(event.target.innerText)\n    const offset = (index - 1) * 10;\n    setFilteredBeers(beers.slice(offset, offset + 10));\n  }\n\n  // Filter by ABV function\n  const filterByVolume = (min, max) => {\n    console.log('click')\n    const filtered = beers.filter((beer) => beer.abv > min && beer.abv < max);\n    setFilteredBeers(filtered);\n  }\n\n  //Returning data from API\n  return (\n    <div className=\"App\">\n      {/** Intial Page logo */}\n      <div className=\"header-image\">\n        <img src=\"/images/brewdog_logo.png\" />\n        <img src=\"/images/talentticker.png\" />\n      </div>\n\n      {/** Scroll Down Button */}\n      <Button\n        className={style.downButton}\n        onClick={() => window.scrollTo({\n          top: 1125,\n          behavior: \"smooth\"\n        })}\n        size='large'\n        color=\"default\"\n        variant=\"text\"\n        fullWidth='true'\n        startIcon={<ExpandMoreIcon />}\n      ></Button>\n\n      {/** Beer Filter */}\n      <div className={style.beerFilter} style={{zIndex: '100'}} >\n        <h1 className={style.beerFilterText}>Select your Alcohol By Volume</h1>\n        \n          <span className={style.filterButton} style={{color: 'white'}} onClick={(e) => filterByVolume(0, 5)}>ABV ◀ 5 </span>\n          <span className={style.filterButton} style={{color: 'white'}} onClick={(e) => filterByVolume(5, 10)}>ABV ▶ 5</span>\n          <span className={style.filterButton} style={{color: 'white'}} onClick={(e) => filterByVolume(10, 100)}>ABV ▶ 10</span>\n        \n      </div>\n\n      {/**Beer Display*/}\n      <div className={style.root}>\n        <ImageList rowHeight={390} cols={6}>\n\n          <ImageListItem key=\"Subheader\" cols={6} style={{ height: 'auto' }}></ImageListItem>\n\n          {filteredBeers && filteredBeers.map((beer, index) => (\n            <ImageListItem key={index}>\n              <img src={beer.image_url} alt={beer.name} />\n              <ImageListItemBar className={style.infoBar} title={beer.name} subtitle={<span>ABV: {beer.abv}</span>} />\n            </ImageListItem>\n          ))}\n\n        </ImageList>\n      </div>\n\n      {/**Pagination component */}\n        <Pagination\n          className={style.paginator}\n          count={3}\n          color=\"secondary\"\n          hideNextButton={true}\n          hidePrevButton={true}\n          onChange={handlePageChange}\n        />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}